name: Build and Deploy backend Docker Image

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE_PREFIX: reneboy/docility-api
  SSH_HOST: ${{ secrets.SERVER_IP }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  dependabot:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
      - name: Check and Merge Dependabot PRs
        run: |
          pr_count=$(gh pr list --state open --label "dependencies" --json number --jq '. | length')
          if [ "$pr_count" -gt 0 ]; then
            gh pr merge $(gh pr list --state open --label "dependencies" --json number --jq '.[0].number') --merge --admin
          fi

  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm install -g snyk
      - run: snyk auth ${{ secrets.SNYK_AUTH }}
      - run: snyk test --all-projects --json --debug > snyk-results.json || true
        continue-on-error: true
      - name: Generate Summary
        run: |
          echo "### 🛡️ Snyk Vulnerability Summary" >> $GITHUB_STEP_SUMMARY
          SEVERITY_COUNTS=$(jq '.vulnerabilities // [] | group_by(.severity) | map({(.[0].severity): length}) | add' snyk-results.json)
          echo "#### 📊 Severity Breakdown" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          echo "$SEVERITY_COUNTS" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "#### 📦 Affected Packages" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Package | Version | Fix Available | Recommended Fix |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|---------|---------|----------------|------------------|" >> $GITHUB_STEP_SUMMARY
          jq -r '.vulnerabilities // [] | .[] | [(.severity | ascii_upcase), .packageName, .version, ((.upgradePath | length > 0) // false), ((.upgradePath[1] // "") | tostring)] | @tsv' snyk-results.json |
            while IFS=$'\t' read -r severity package version fix recommended; do
              echo "| $severity | $package | $version | $fix | ${recommended:-N/A} |" >> $GITHUB_STEP_SUMMARY
            done
        continue-on-error: true
      - run: snyk monitor --all-projects
        continue-on-error: true

  build-and-push:
    runs-on: ubuntu-latest
    needs: [dependabot, snyk-scan]
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Image Tag
        id: meta
        run: echo "image_tag=${{ github.run_number }}" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: docker/setup-buildx-action@v3
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: reneboy/docility-api-master:${{ steps.meta.outputs.image_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            IMAGE_NAME="${{ env.DOCKER_IMAGE_PREFIX }}-master"
            IMAGE_TAG="${{ needs.build-and-push.outputs.image_tag }}"
            BACKEND_PORT=1337
            sudo docker pull $IMAGE_NAME:$IMAGE_TAG
            if [ "$(sudo docker ps -a -q -f name=backend-app)" ]; then
              sudo docker stop backend-app && sudo docker rm backend-app
            fi
            if [ "$(sudo docker ps -q -f publish=$BACKEND_PORT)" ]; then
              sudo docker rm -f $(sudo docker ps -q -f publish=$BACKEND_PORT)
            fi
            sudo docker run -d --name backend-app -p $BACKEND_PORT:1337 $IMAGE_NAME:$IMAGE_TAG
            sudo systemctl restart nginx

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Remove Local Docker Image
        run: |
          IMAGE_NAME="${{ env.DOCKER_IMAGE_PREFIX }}-master"
          IMAGE_TAG="${{ github.run_number }}"
          docker rmi $IMAGE_NAME:$IMAGE_TAG || true
